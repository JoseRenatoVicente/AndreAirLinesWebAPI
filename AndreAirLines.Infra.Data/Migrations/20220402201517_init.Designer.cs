// <auto-generated />
using System;
using AndreAirLines.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AndreAirLines.Infra.Data.Migrations
{
    [DbContext(typeof(AndreAirLinesAPIContext))]
    [Migration("20220402201517_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("District")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Street")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Aircraft", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Airport", b =>
                {
                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(30)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Acronym");

                    b.HasIndex("AddressId");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.BasePrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAcronym")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OriginAcronym")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("PercentagePromotion")
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("DestinationAcronym");

                    b.HasIndex("OriginAcronym");

                    b.ToTable("BasePrice");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AircraftId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAcronym")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DisembarkationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginAcronym")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("DestinationAcronym");

                    b.HasIndex("OriginAcronym");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Passenger", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(15)");

                    b.Property<char>("Sex")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Cpf");

                    b.HasIndex("AddressId");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PassengerCpf")
                        .HasColumnType("varchar(14)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("FlightId");

                    b.HasIndex("PassengerCpf");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Airport", b =>
                {
                    b.HasOne("AndreAirLines.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.BasePrice", b =>
                {
                    b.HasOne("AndreAirLines.Domain.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("AndreAirLines.Domain.Entities.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationAcronym");

                    b.HasOne("AndreAirLines.Domain.Entities.Airport", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginAcronym");

                    b.Navigation("Class");

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Flight", b =>
                {
                    b.HasOne("AndreAirLines.Domain.Entities.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId");

                    b.HasOne("AndreAirLines.Domain.Entities.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationAcronym");

                    b.HasOne("AndreAirLines.Domain.Entities.Airport", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginAcronym");

                    b.Navigation("Aircraft");

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Passenger", b =>
                {
                    b.HasOne("AndreAirLines.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("AndreAirLines.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("AndreAirLines.Domain.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("AndreAirLines.Domain.Entities.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId");

                    b.HasOne("AndreAirLines.Domain.Entities.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerCpf");

                    b.Navigation("Class");

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });
#pragma warning restore 612, 618
        }
    }
}
